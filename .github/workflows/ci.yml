name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  pr-checks:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci || npm i
      - name: Typecheck + compile
        run: npm run build
      - name: Lint
        run: npm run lint

  main-checks:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci || npm i
      - name: Typecheck + compile
        run: npm run build
      - name: Lint
        run: npm run lint
      - id: determine
        name: Determine publish necessity
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          echo "Package: $NAME@$VERSION"
          EXISTING=$(npm view "$NAME" versions --json || echo "[]")
          echo "Existing versions: $EXISTING"
          SHOULD_PUBLISH=$(node -e "const v=process.argv[1]; let arr=[]; try{arr=JSON.parse(process.argv[2])}catch{}; console.log(!arr.includes(v))" "$VERSION" "$EXISTING")
          echo "should_publish=$SHOULD_PUBLISH" >> $GITHUB_OUTPUT
      - name: Publish to npm (if version changed)
        if: steps.determine.outputs.should_publish == 'true'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN || secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish || echo "Publish failed; continuing as green per policy."
        continue-on-error: true
